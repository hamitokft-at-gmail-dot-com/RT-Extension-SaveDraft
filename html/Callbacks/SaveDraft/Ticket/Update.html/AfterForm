<%init>
    my $id = $ARGS{'id'};
</%init>

<script>

    const displayModal = (dm) => {
        if (0 < dm.size) {
            const modal = jQuery('#SaveDraft');
            if (modal) {
                modal.css("display", "block");
            }

            // Clear button
            const clearButton = jQuery("#SaveDraft-clear");
            clearButton.on('click', () => {
                localStorage.removeItem(draftId);
                modal.css("display", "none");
            } );

            // Load button
            const loadButton = jQuery("#SaveDraft-load");
            loadButton.on('click', () => {
                loadDraft(dm);
                modal.css("display", "none");
            } );
        }

    };

    const loadDraft  = (dm) => {

        if (dm.has('UpdateCc')) {
            const selected = new Array;
            const updateCc = jQuery("#UpdateCc")[0].selectize;
            Object.values(JSON.parse(dm.get('UpdateCc'))).forEach(element => {
                const option = {
                    label: element['label'],
                    value: element['value'],
                };
                updateCc.addOption(option);
                selected.push(option.value); 
            });
            updateCc.setValue(selected);
        }

        if (dm.has('UpdateBcc')) {
            const selected = new Array;
            const updateBcc = jQuery("#UpdateBcc")[0].selectize;
            Object.values(JSON.parse(dm.get('UpdateBcc'))).forEach(element => {
                const option = {
                    label: element['label'],
                    value: element['value'],
                };
                updateBcc.addOption(option);
                selected.push(option.value); 
            });
            updateBcc.setValue(selected);
        }

        if (dm.has('UpdateSubject')) {
            jQuery("input[name='UpdateSubject']").val(dm.get('UpdateSubject'));
        }

        if (dm.has('UpdateContent')) {
            if (CKEDITOR.instances && CKEDITOR.instances['UpdateContent']) {
                CKEDITOR.instances['UpdateContent'].setData(dm.get('UpdateContent'));
            } else {
                jQuery('#UpdateContent').val(dm.get('UpdateContent'));
            }
        }

        if (dm.has('Status')) {
            jQuery("select[name='Status']").val(dm.get('Status')).change();;
        }

        if (dm.has('UpdateType')) {
            jQuery("#UpdateType").val(dm.get('UpdateType')).change();;
        }

        if (dm.has('Owner')) {
            jQuery("select[name='Owner']").val(dm.get('Owner')).change();;
        }
        
        if (dm.has('UpdateTimeWorked')) {
            jQuery("input[name='UpdateTimeWorked']").val(dm.get('UpdateTimeWorked'));
        }

        if (dm.has('UpdateTimeWorked-TimeUnits')) {
            jQuery("select[name='UpdateTimeWorked-TimeUnits']").val(dm.get('UpdateTimeWorked-TimeUnits')).change();;
        }

    };

    const ticketId    = "<% $id %>" || 'unknown';

    let   action      = 'default';
    const actionField = jQuery('input[name="Action"]');
    if (null != actionField) action = actionField[0].value || 'default';

    let   quote       = '-';
    const quoteField  = jQuery('input[name="QuoteTransaction"]');
    if (null != quoteField) quote = quoteField[0].value || '-';

    const draftId     = `RT_${ticketId}_${action}_${quote}_Draft`;
    const draftJson   = localStorage.getItem(draftId);
    const draftAray   = null == draftJson     ? new Array() : JSON.parse(draftJson);
    const draftMap    = 0 == draftAray.length ? new Map()   : new Map(draftAray);
    
    const state       = { save: true, };

    jQuery().ready(() => {

        // Display modal
        displayModal(draftMap);

        jQuery("#UpdateCc").on('change', function() {
            draftMap.set('UpdateCc', JSON.stringify(this.selectize.options));
            localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
        });

        jQuery("#UpdateBcc").on('change', function() {
            draftMap.set('UpdateBcc', JSON.stringify(this.selectize.options));
            localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
        });

        jQuery("input[name='UpdateSubject']").on('input propertychange', function() {
            draftMap.set('UpdateSubject', this.value);
            localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
        });

        // RichTextEditor
        if (CKEDITOR.instances && CKEDITOR.instances['UpdateContent']) {
            const editor = CKEDITOR.instances['UpdateContent'];

            editor.on('instanceReady', function () {
                
                this.on('change', () => {
                    if (state['save']) {
                        draftMap.set('UpdateContent', editor.getData());
                        localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
                    }
                });
            });

        } else {
            // TextArea
            jQuery('#UpdateContent').on('input propertychange', (e) => {
                if (state['save']) {
                    draftMap.set('UpdateContent', e.val());
                    localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
                }
            });
        }

        jQuery("input[name='SubmitTicket']").on('click', () => {
            state['save'] = false;
            localStorage.removeItem(draftId);
            state['save'] = true;
        });

        jQuery("#UpdateType").on('change', function() {
            if (state['save']) {
                draftMap.set('UpdateType', this.value);
                localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
            }
        });

        jQuery("select[name='Status']").on('change', function() {
            if (state['save']) {
                draftMap.set('Status', this.value);
                localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
            }
        });

        jQuery("select[name='Owner']").on('change', function() {
            if (state['save']) {
                draftMap.set('Owner', this.value);
                localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
            }
        });
        
        jQuery("input[name='UpdateTimeWorked']").on('input propertychange', function() {
            if (state['save']) {
                draftMap.set('UpdateTimeWorked', this.value);
                localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
            }
        });

        jQuery("select[name='UpdateTimeWorked-TimeUnits']").on('change', function() {
            if (state['save']) {
                draftMap.set('UpdateTimeWorked-TimeUnits', this.value);
                localStorage.setItem(draftId, JSON.stringify(Array.from(draftMap.entries())));
            }
        });
    });

</script>
